########################################################################
# Preprocessing parameters for different sensors
########################################################################
rcm_slc_cp_params:
    raw_safe_dir: /home/l44xu/SIP/data/rcm_raw_data/RCM1_OK1050595_PK1051816_1_3MCP24_20200219_123901_CH_CV_SLC/manifest.safe
    multilook_num: 3
    low_percentage_to_remove: 0.1
    high_percentage_to_remove: 0.1
    output_raw_img_dir: /home/l44xu/SIP/data/rcm_preprocessed_imgs/


########################################################################
# Raw data parameters
########################################################################
raw_data_params:
    raw_img_dir: /home/l44xu/SIP/data/rcm_preprocessed_imgs/
    raw_img_type: tiff
    raw_id_str_range:
        start: 10
        end: 22
    raw_band_names:
        - c110000000
        - c220000000
        - c12r000000

#########################################################################
# (A) config directories of images and ground-truth (GT) for classification
#########################################################################

dirs:
    image_type: npz
    mask_type: npz

    # A (images, mask) pair is identified by looking for the same file name in the 'data' subfolder and 'mask' subfolder
    # E.g., 'hsi1.mat' in /data/train/ is associated with 'hsi1.mat' in /mask/train/ folder
    # ----------------------------------------------------------------
    # (1) config image directories
    
    data: 
    
        # (1.1) training_data_dir contains images with GT in training_mask_dir for training
        train: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/data/train
        
        # (1.2) val_data_dir contains images with GT in val_data_dir for validation
        val: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/data/val
        
        # (1.3) test_data_dir contains images with GT in test_mask_dir for test to acquire training accuracies
        test: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/data/test
        
        # (1.4) predict_data_dir contains images that do not have GT for prediction to acquire classification maps
        predict: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/data/predict
        
    #-----------------------------------------------------------------
    # (2) config GT directories
    
    mask:   
     
        # (2.1) training_mask_dir contrains one-to-one matching masks with images in training_data_dir
        train: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/mask/train
        
        # (2.2) val_mask_dir contains one-to-one matching masks with images in val_data_dir
        val: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/mask/val
        
        # (2.3) test_mask_dir contains one-to-one matching masks with images in test_data_dir
        test: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/mask/test

        # (2.4) predict_mask_dir contains the background pixel masks for some images in predict_data_dir
        predict: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/mask/predict
        
    #------------------------------------------------------------------
    # (3) config results directories
    
    save:
        
        # (3.1) specify directory to save model i.e. best model log file
        model: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/save/model
        
        # (3.2) specify directory to save training results i.e. maps accuracies
        train: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/save/train
        
        # (3.3) specify directory to save val results i.e. maps accuracies
        val: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/save/val
        
        # (3.4) specify directory to save test results i.e. maps accuracies
        test: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/save/test
        
        # (3.5) specify directory to save predict results i.e. maps
        predict: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/save/predict
        

######################################################################
# (B) config training parameters

gpu: 0

use_cuda: True


classification_map_params:

    num_classes: 3
    
    class_color_config_params:
        my_colors:
            - white #the color of Unknown class
            - indigo #1
            - yellow #2
            - green #3
        my_classes: # the class names you defined here have to be consistent with the class names appeared in GUI
                    # e.g., in GUI, if you have land_train, land_val, land_test, water_train, water_val, water_test, 
                    # then, here you need to have two classes, i.e., land and water. 
            - Unknown #0 
            - river #1
            - urban #2
            - veg #3

    #define the indicator of the background class whose class identity is unknown
    #the color of the background class is defined as the first color in 'my_colors'
    background_class_indicator: 0


data_params: 


    img_data_params: #image input to FCN models
        split_size: 145
        overlap: 5

    patch_data_params: #patch input to CNN models with fully connected layers
        patch_size: 13  # **
        save_extracted_patches: False #whether the extracted patch samples will be saved
        is_dataset_cuda: False # 'True' means all patches deployed on cuda; 'False' means cuda will be used batch-wise; 
        extract_patch_cuda: False # 'True' means performing F.unfold() on cuda()
        to_extract_patches_blockwise: False
        extract_patches_block_size_r: 1000
        extract_patches_block_size_c: 1000
        to_predict_patches_blockwise: True
        predict_patches_block_size_r: 2000
        predict_patches_block_size_c: 2000
        
train_params: 
    lr: 0.0001  # **
    epoch: 50  # **
    batch_size_train: 2000 # batch_size when doing training
    batch_size_val: 20000 # batch_size when doing val and test
    val_inter: 1 # if 1, then validation and test are used in each epoch 
    to_test: True # is True, both validation and test data will be used to evaluate training
    prop_test: 1 # if 0.1, then 10% of all test samples are used in each epoch
    var: 0.05 # std of noise added to input when using images as input 
    net_type: ss_res
 
    train_mask_save_options:
        save_train_mask: True
        img_format: png
    
    input_img_save_options:
        save_input_img: True # if True, original images will be saved
        img_format: png
        is_rgb: False # whether want to display rgb image, if not, all channels will be saved separately
        rgb_bands: 0_0_0 # specify r, g, and b channels
        vmin: 0 # vmin of gray image, [vmin, vmax] is the range that the colormap covers
        vmax: 255 # vmax of gray image, [vmin, vmax] is the range that the colormap covers

    map_save_options:
        save_classification_map: True
        img_format: png
        copy_map_to_raw_data_dir: True


train_result_params:
    train_log_file: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/save/model/ss_res_batchSize2000_epoch50_lr0.0001_time20200419153300_train.log
    model_file: ss_res_batchSize2000_bestEpoch1_lr0.0001_time20200419153318_weights.pkl
    train_config_file: /home/l44xu/SIP/data/rcm_preprocessed_imgs/all_data/save/model/ss_res_batchSize2000_bestEpoch1_lr0.0001_time20200419153318__time20200419153318_train_config.yaml

test_params:
    batch_size: 20000 # batch size for test
    
    test_mask_save_options:
        save_test_mask: True
        img_format: png
        
    input_img_save_options:
        save_input_img: True # if True, original images will be saved
        img_format: png
        is_rgb: False # whether want to display rgb image, if not, all channels will be saved separately
        rgb_bands: 0_0_0 # specify r, g, and b channels
        vmin: 0 # vmin of gray image, [vmin, vmax] is the range that the colormap covers
        vmax: 255 # vmax of gray image, [vmin, vmax] is the range that the colormap covers
    map_save_options:
        save_classification_map: True
        img_format: png
        copy_map_to_raw_data_dir: True


test_result_params:
    test_log_file: /home/l44xu/SIP/data/RCM/all_data/save/model/ss_res_batchSize2000_epoch10_lr0.0001_time20200413190648_time20200413191037_test.log
    test_config_file: /home/l44xu/SIP/data/RCM/all_data/save/model/ss_res_batchSize2000_bestEpoch1_lr0.0001_time20200413190714_time20200413191037_test_config.yaml
    

predict_params:
    
    batch_size: 20000 # batch size for predict
    
    input_img_save_options:
        save_input_img: True # if True, original images will be saved
        img_format: png
        is_rgb: False # whether want to display rgb image, if not, all channels will be saved separately
        rgb_bands: 0_0_0 # specify r, g, and b channels
        vmin: 0 # vmin of gray image, [vmin, vmax] is the range that the colormap covers
        vmax: 255 # vmax of gray image, [vmin, vmax] is the range that the colormap covers

    map_save_options:
        load_hardlabel_and_generate_map: True
        save_classification_map: True
        img_format: png
        copy_map_to_raw_data_dir: True


predict_result_params:
    predict_log_file: /home/l44xu/SIP/data/RCM/all_data3/save/model/ss_res_batchSize2000_epoch50_lr0.0001_time20200415025913_time20200415035046_predict.log
    predict_config_file: /home/l44xu/SIP/data/RCM/all_data3/save/model/ss_res_batchSize2000_bestEpoch40_lr0.0001_time20200415030345_time20200415035046_predict_config.yaml

 

#####################################################################
# (C) config model parameters
#####################################################################


net_params:

    dip_res: 
        channels: 128
        blocks: 3
        act_fun: LeakyReLU  # LeakyRELU ReLU ...
        pad: reflection  # reflection zero ...
    
    
    dip_spa: 
        channels: 32
        blocks: 3
        is_bn: True
        is_dropout: False
        p: 0.2
    
    
    dip_spe: 
        channels: 32
        blocks: 3
        is_bn: True
        is_dropout: False
        p: 0.2
    
    
    ss_zl: 
        spec_channels: 8
        spat_channels: 8
        interim_channels: 8
        spec_blocks: 1
        spat_blocks: 1
        is_bn: True
        is_dropout: False
        p: -0.2
    
    
    ss_res: 
        channels: 4
        blocks: 3
        is_bn: True
        is_dropout: False
        p: -0.2
    
    
    ss_cnn: 
        feature_nums:
            - 16
            - 32
        is_bn: True
        is_dropout: False
        p: -0.2
    
    
    dipss_new: 
        act_fun: LeakyReLU  # LeakyRELU ReLU ...
        pad: reflection  # reflection zero ...
    
        spectral_block_channels: 128
        spatial_block_channels: 128
        spectral_blocks: 3
        spatial_blocks: 3
        is_bn: True
        is_dropout: False
        p: -0.2
    
    
    dip_resnet_ssblock: 
        act_fun: LeakyReLU  # LeakyRELU ReLU ...
        pad: reflection  # reflection zero ...
    
        spectral_block_channels: 128
        spatial_block_channels: 128
        spectral_blocks: 3
        spatial_blocks: 3
        is_bn: True
        is_dropout: False
        p: -0.2
  
    svm:
        innate:
            class_weight: balanced
            probability: True
        grid_search:
            - kernel:
                - rbf
                - gamma:
                    - 0.1
                    - 0.01
                    - 0.001
                - C:
                    - 1
                    - 10
                    - 100
                    - 1000 
            - kernel:
                - linear
                - C:
                    - 0.1
                    - 1
                    - 10
                    - 100
                    - 1000
            - kernel:
                - poly
                - degree: 3
                - gamma:
                    - 0.1
                    - 0.01
                    - 0.001
        crf:
            crf: unknown
 
dip_model_list:
    - dip_res
    - dip_spe
    - dip_spa
    - dipss_new
    - dip_resnet_ssblock

patch_model_list:
    - ss_res
    - ss_cnn
    - ss_zl


